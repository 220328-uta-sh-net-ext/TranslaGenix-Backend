name: .NET

on:
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: windows-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
         java-version: 1.11
         uses: actions/checkout@v3
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
         dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore ./TranslaGenixAPI
      - name: Test
        run: dotnet test --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ SONAR_TOKEN_BACKEND }}
      - shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"220328-uta-sh-net-ext_P2-SigniSight" /o:"220328-uta-sh-net-ext" /d:sonar.login="${{ SONAR_TOKEN_BACKEND }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          dotnet build 
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ SONAR_TOKEN_BACKEND }}"